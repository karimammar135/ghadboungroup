type Anchor=`bottom`|`bottom-left`|`bottom-right`|`center`|`left`|`top`|`top-left`|`top-right`|`right`;type BreakPoint=`xs`|`sm`|`md`|`lg`|`xl`|`2xl`;type Environment=`debug`|`offline`|`production`;type FetchPriority=`high`|`low`|`auto`;type Mode=`contain`|`cover`;type Placeholder=`maincolor`|`meancolor`|`none`|`preview`;type StateEvent={target:any;state:State;};type State=`error`|`done`|`loading`|`new`;interface AnchorObject{x:string|undefined;y:string|undefined;}interface Attributes{alt?:string;anchor?:string;focus?:string;eager?:boolean|string;position?:string;preTransform?:string;ratio?:number|string;src:string;title?:string;}interface ScriptAttributes{bot?:string;intrinsic?:string;mode?:Mode;placeholder?:Placeholder;step?:number|string;transition?:boolean|string;transitionDelay?:string;transitionDuration?:string;transitionTimingFunction?:string;}interface Options{anticipation?:number;breakpoints?:{[key in BreakPoint]?:number;};class?:string;debug?:boolean;domain:string;env?:Environment;handleShadowDom?:boolean;maxDPR?:number;path?:string;scriptElementId?:string;step?:number;}interface Picture{sources:Record<string,string>[];img:Record<string,string>;}interface PlaceholderData{anchor:AnchorObject;focus:string;mode:Mode;placeholder:Placeholder;preTransform:string;ratio:number;refit:string;src:string;transitions:Record<string,boolean>;videoOptions?:VideoOptions;}interface VideoOptions{videoTransform?:string;posterTransform?:string;}declare const computePicture:(anchors:Record<number,AnchorObject>,eager:boolean,fetchPriority:FetchPriority,focuses:Record<number,string>,modes:Record<number,Mode>,positions:Record<number,string>,preTransform:string,ratios:Record<number,number>,refit:string,sizes:Record<number,string>,src:string)=>Picture;declare const computeAlt:(alt:string,mediaTag:string)=>string;declare const computeData:(anchor:AnchorObject,bot:string,eager:boolean,focus:string,intrinsic:string,mediaTag:string,mode:Mode,preTransform:string,refit:string,src:string,step:number,videoOptions:VideoOptions)=>Record<string,string>;declare const computePlaceholderStyle:(anchor:AnchorObject,focus:string,mode:Mode,placeholder:Placeholder,position:string,preTransform:string,ratio:number,refit:string,src:string,transitions:Record<string,boolean>,transitionDelay:string,transitionDuration:string,transitionTimingFunction:string,videoOptions:VideoOptions,placeholderDataHandler:(data:PlaceholderData)=>void)=>Record<string,string>;declare const computeStyle:(anchor:AnchorObject,mediaTag:string,mode:Mode,position:string,transitionDelay:string,transitionDuration:string,transitionTimingFunction:string)=>Record<string,string>;declare const computeWrapperClass:(className:string,src:string,transitions:Record<string,boolean>)=>string;declare const computeWrapperStyle:(ratio:number)=>Record<string,string>;declare const computeMagnifierStyle:(zoom:boolean|number)=>Record<string,string>;declare const getDataAttributeName:(baseName:string)=>string;declare const installTwicPics:(options:Options)=>void;declare const _default:(magnifierContainer:HTMLDivElement)=>void;declare class Observer{private media;private placeholderData;private savedWrapperBackground;private stateHandler;constructor(stateHandler?:(state:State)=>void);handleState:()=>void;refreshBackground:(...args:any[])=>void;setMedia:(media:HTMLElement)=>void;setPlaceholderData:(data:PlaceholderData)=>void;destroy:()=>void;}declare const parseAnchor:(anchor:string)=>AnchorObject;declare const parseAnchors:(value:string|AnchorObject)=>Record<number,AnchorObject>;declare const parseAlt:(value:string)=>string;declare const parseBot:(value:string)=>string;declare const parseClassName:(value:string)=>string;declare const parseDuration:(value:number|string)=>number;declare const parseEager:(value:boolean|string)=>boolean;declare const parseFetchPriority:(value:string)=>FetchPriority;declare const parseFocus:(value:string)=>string;declare const parseFocuses:(value:string)=>Record<number,string>;declare const parseFrom:(value:number|string)=>number;declare const parseIntrinsic:(value:string)=>string;declare const parseMediaTag:(value:string)=>string;declare const parseMode:(value:string)=>Mode;declare const parseModes:(value:string)=>Record<number,Mode>;declare const parsePlaceholder:(placeholder:Placeholder)=>Placeholder;declare const parsePosition:(value:string)=>string;declare const parsePositions:(value:string)=>Record<number,string>;declare const parsePreTransform:(value:string)=>string;declare const parseRatio:(value:number|string)=>number;declare const parseRatios:(value:string|number)=>Record<number,number>;declare const parseRefit:(value:boolean|string)=>string;declare const parseSizes:(value:string)=>Record<number,string>;declare const parseStep:(value:number|string)=>number;declare const parseSrc:(value:string)=>string;declare const parseTo:(value:number|string)=>number;declare const parseTitle:(value:string)=>string;declare const parseTransition:(value:boolean|string)=>Record<string,boolean>;declare const parseTransitionDelay:(value:string)=>string;declare const parseTransitionDuration:(value:string)=>string;declare const parseTransitionTimingFunction:(value:string)=>string;declare const parseZoom:(value:number|string)=>boolean|number;declare const preComputeVideoOptions:(duration:number,from:number,posterFrom:number,to:number)=>VideoOptions;declare const preComputePlaceholder:(placeholder:Placeholder,src:string)=>Placeholder;declare const isWebComponents:boolean;declare const isBrowser:boolean;declare const getCurrentComponent:()=>HTMLElement;declare const styleToString:(properties:Record<string,string>)=>string;export{Anchor,Attributes,Environment,Mode,Observer,Options,Placeholder,ScriptAttributes,State,StateEvent,VideoOptions,computeAlt,computeData,computeMagnifierStyle,computePicture,computePlaceholderStyle,computeStyle,computeWrapperClass,computeWrapperStyle,getCurrentComponent,getDataAttributeName,_default as initMagnifier,installTwicPics,isBrowser,isWebComponents,parseAlt,parseAnchor,parseAnchors,parseBot,parseClassName,parseDuration,parseEager,parseFetchPriority,parseFocus,parseFocuses,parseFrom,parseIntrinsic,parseMediaTag,parseMode,parseModes,parsePlaceholder,parsePosition,parsePositions,parsePreTransform,parseRatio,parseRatios,parseRefit,parseSizes,parseSrc,parseStep,parseTitle,parseTo,parseTransition,parseTransitionDelay,parseTransitionDuration,parseTransitionTimingFunction,parseZoom,preComputePlaceholder,preComputeVideoOptions,styleToString};